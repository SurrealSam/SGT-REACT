{"version":3,"sources":["auth.js","pages/login.js","pages/itemsummary.js","pages/home.js","protected.route.js","App.js","serviceWorker.js","index.js"],"names":["this","authenticated","cb","Login","props","useState","loginUsername","setLoginUsername","loginPassword","setLoginPassword","className","placeholder","onChange","e","target","value","onClick","Axios","method","data","username","password","withCredentials","url","then","res","console","log","auth","login","history","push","ItemSummary","displayData","state","showdata","items","movements","testDate","quantityTotal","appendData","bind","buildItem","getItems","getMovements","isNotExpired","makeDate","appendLot","buildLot","appendTotal","buildTotal","buildWholeCard","filterMovements","setState","setTimeout","item","name","sku","i","movementArray","length","forEach","totalQuantity","lots","lot","expiration","movement","parseInt","quantity","uniqueLots","Set","builtLots","listColor","total","date","today","todayDate","Date","year","getFullYear","month","getMonth","day","getDate","toString","id","React","Component","Home","logout","ProtectedRoute","component","rest","render","isAuthenticated","to","pathname","from","location","App","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.26640d94.chunk.js","sourcesContent":["class Auth {\r\n    constructor(){\r\n        this.authenticated = false;\r\n    }\r\n\r\n    login(cb) {\r\n        this.authenticated = true;\r\n        cb();\r\n    }\r\n\r\n    logout(cb) {\r\n        this.authenticated = false;\r\n        cb();\r\n    }\r\n    isAuthenticated() {\r\n        return this.authenticated;\r\n    }\r\n}\r\n\r\nexport default new Auth();","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport auth from '../auth';\r\n\r\nfunction Login(props) {\r\n  /* const [registerUsername, setRegisterUsername] = useState(\"\");\r\n  const [registerPassword, setRegisterPassword] = useState(\"\"); */\r\n  const [loginUsername, setLoginUsername] = useState(\"\");\r\n  const [loginPassword, setLoginPassword] = useState(\"\");\r\n  /* const [data, setData] = useState(null); */\r\n  /* const register = () => {\r\n    Axios({\r\n      method: \"POST\",\r\n      data: {\r\n        username: registerUsername,\r\n        password: registerPassword,\r\n      },\r\n      withCredentials: true,\r\n      url: \"http://localhost:4000/register\",\r\n    }).then((res) => console.log(res));\r\n  }; */\r\n  const login = () => {\r\n    Axios({\r\n      method: \"POST\",\r\n      data: {\r\n        username: loginUsername,\r\n        password: loginPassword,\r\n      },\r\n      withCredentials: true,\r\n      url: \"http://localhost:4000/login\",\r\n    })\r\n\r\n    /* fetch(\"http://localhost:4000/login\", {\r\n      method: \"POST\",\r\n      data: {\r\n        username: loginUsername,\r\n        password: loginPassword,\r\n      },\r\n      withCredentials: true\r\n\r\n    }) */\r\n      .then((res) => {\r\n        console.log(res.data);\r\n\r\n        if (res.data === \"Successfully Authenticated\") {\r\n          auth.login(() => {\r\n            props.history.push(\"/home\");\r\n          })\r\n        }\r\n      });\r\n  };\r\n  /* const getUser = () => {\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"http://localhost:4000/user\",\r\n    }).then((res) => {\r\n      setData(res.data);\r\n      console.log(res.data);\r\n    });\r\n  }; */\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <div>\r\n        <h1>Register</h1>\r\n        <input\r\n          placeholder=\"username\"\r\n          onChange={(e) => setRegisterUsername(e.target.value)}\r\n        />\r\n        <input\r\n          placeholder=\"password\"\r\n          onChange={(e) => setRegisterPassword(e.target.value)}\r\n        />\r\n        <button onClick={register}>Submit</button>\r\n      </div> */}\r\n\r\n      <div>\r\n        <h1>Login</h1>\r\n        <input\r\n          placeholder=\"username\"\r\n          onChange={(e) => setLoginUsername(e.target.value)}\r\n        />\r\n        <input\r\n          placeholder=\"password\"\r\n          onChange={(e) => setLoginPassword(e.target.value)}\r\n        />\r\n        <button onClick={login}>Submit</button>\r\n      </div>\r\n\r\n      {/* <div>\r\n        <h1>Get User</h1>\r\n        <button onClick={getUser}>Submit</button>\r\n        {data ? <h1>Welcome Back {data.username}</h1> : null}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\nclass ItemSummary extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.displayData = [];\r\n\r\n        this.state = {\r\n            showdata: this.displayData,\r\n            items: [],\r\n            movements: [],\r\n            testDate: \"\",\r\n            quantityTotal: 0\r\n        }\r\n\r\n        this.appendData = this.appendData.bind(this);\r\n        this.buildItem = this.buildItem.bind(this);\r\n        this.getItems = this.getItems.bind(this);\r\n        this.getMovements = this.getMovements.bind(this);\r\n        /* this.getMovementsBySKU = this.getMovementsBySKU.bind(this); */\r\n        this.isNotExpired = this.isNotExpired.bind(this);\r\n        this.makeDate = this.makeDate.bind(this);\r\n        this.appendLot = this.appendLot.bind(this);\r\n        this.buildLot = this.buildLot.bind(this);\r\n        this.appendTotal = this.appendTotal.bind(this);\r\n        this.buildTotal = this.buildTotal.bind(this);\r\n        this.buildWholeCard = this.buildWholeCard.bind(this);\r\n        this.filterMovements = this.filterMovements.bind(this);\r\n        \r\n        \r\n\r\n    };\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            movements: this.getMovements()\r\n        })\r\n        this.getItems()\r\n        setTimeout(()=> this.buildWholeCard() , 1500);\r\n        \r\n    }\r\n\r\n    buildItem(item) {\r\n\r\n        const itemDiv =\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{item.name}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">{item.sku}</h6>\r\n                    <p className=\"card-text\"></p>\r\n\r\n                </div>\r\n            </div>;\r\n        return itemDiv;\r\n    }\r\n\r\n    /* buildLot(item) {\r\n\r\n        let listColor;\r\n\r\n        if (item.movement === \"receiving\") {\r\n            listColor = \"list-group-item-primary\";\r\n        }\r\n        if (item.movement === \"shipping\") {\r\n            listColor = \"list-group-item-warning\";\r\n        }\r\n\r\n        const itemDiv =\r\n            <li className={`list-group-item ${listColor}`}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2 \">{item.movement}</div>\r\n                    <div className=\"col-md-2\">{item.date}</div>\r\n                    <div className=\"col-md-2\">{item.po}</div>\r\n                    <div className=\"col-md-2\">{item.lot}</div>\r\n                    <div className=\"col-md-2\">{item.expiration}</div>\r\n                    <div className=\"col-md-2\">{item.quantity}</div>\r\n\r\n                </div>\r\n            </li>;\r\n        return itemDiv;\r\n    } */\r\n\r\n    filterMovements(sku) {\r\n        var movementArray = [];\r\n        let i;\r\n        for (i = 0; i < this.state.movements.length; i++) {\r\n            if (this.state.movements[i].sku === sku) {\r\n                movementArray.push(this.state.movements[i]);\r\n            }\r\n        }\r\n        \r\n        return movementArray;\r\n    }\r\n\r\n    buildWholeCard() {\r\n        this.state.items.forEach(item => {\r\n            let totalQuantity = 0;\r\n            let movementArray = this.filterMovements(item.sku);\r\n            this.appendData(item);\r\n            let lots = [];\r\n\r\n            movementArray.forEach(item => {\r\n                /* this.appendLot(item); */\r\n                lots.push(item.lot);\r\n\r\n                if (item.expiration) {\r\n                    if (this.isNotExpired(item.expiration)) {\r\n                        if (item.movement === \"shipping\") {\r\n\r\n\r\n                            totalQuantity = totalQuantity - parseInt(item.quantity)\r\n\r\n\r\n\r\n                        }\r\n                        if (item.movement === \"receiving\") {\r\n\r\n                            totalQuantity = totalQuantity + parseInt(item.quantity)\r\n\r\n                        }\r\n                    }\r\n                } else {\r\n\r\n                    if (item.movement === \"shipping\") {\r\n\r\n\r\n                        totalQuantity = totalQuantity - parseInt(item.quantity)\r\n\r\n\r\n\r\n                    }\r\n                    if (item.movement === \"receiving\") {\r\n\r\n                        totalQuantity = totalQuantity + parseInt(item.quantity)\r\n\r\n                    }\r\n                }\r\n\r\n            })\r\n            let uniqueLots = [...new Set(lots)];\r\n            let builtLots = [];\r\n            uniqueLots.forEach(lot => {\r\n\r\n                builtLots.push({\r\n                    lot: lot,\r\n                    quantity: 0,\r\n                    expiration: '',\r\n                    isNotExpired: true\r\n                })\r\n\r\n            })\r\n            \r\n            movementArray.forEach(movement => {\r\n\r\n                let i;\r\n                for (i = 0; i < builtLots.length; i++) {\r\n                    if (movement.lot === builtLots[i].lot) {\r\n\r\n                        if (movement.movement === \"shipping\") {\r\n\r\n                            builtLots[i].quantity = builtLots[i].quantity - parseInt(movement.quantity);\r\n\r\n                        }\r\n                        if (movement.movement === \"receiving\") {\r\n\r\n                            builtLots[i].quantity = builtLots[i].quantity + parseInt(movement.quantity);\r\n\r\n                        }\r\n                        if (movement.expiration) {\r\n\r\n                            builtLots[i].isNotExpired = this.isNotExpired(movement.expiration);\r\n                            builtLots[i].expiration = movement.expiration;\r\n\r\n                        }\r\n                    };\r\n                }\r\n            })\r\n            \r\n            builtLots.forEach(lot =>{\r\n                this.appendLot(lot);\r\n            })\r\n            this.appendTotal(totalQuantity);\r\n        })\r\n\r\n    }\r\n\r\n    buildLot(lot) {\r\n\r\n        let listColor;\r\n\r\n        if (lot.isNotExpired) {\r\n            listColor = \"list-group-item-success\";\r\n        }\r\n        else {\r\n            listColor = \"list-group-item-danger\"\r\n        }\r\n\r\n        const itemDiv =\r\n            <li className={`list-group-item ${listColor}`}>\r\n                <div className=\"row\">\r\n                    \r\n                    <div className=\"col-md-2\">Lot: {lot.lot}</div>\r\n                    <div className=\"col-md-2\">Expiration Date: {lot.expiration}</div>\r\n                    <div className=\"col-md-2\">Quantity: {lot.quantity}</div>\r\n                    <div className=\"col-md-6 \"></div>\r\n\r\n                </div><br></br>\r\n            </li>\r\n            ;\r\n        return itemDiv;\r\n    }\r\n\r\n\r\n    buildTotal(total) {\r\n\r\n\r\n\r\n        const itemDiv =\r\n            <li>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 \"></div>\r\n                    <div className=\"col-md-2\">Total: {total}</div>\r\n                    <div className=\"col-md-6 \"></div>\r\n\r\n                </div><br></br>\r\n            </li>\r\n            ;\r\n        return itemDiv;\r\n    }\r\n\r\n    getItems() {\r\n\r\n        Axios({\r\n            method: \"GET\",\r\n            url: \"http://localhost:4000/items\",\r\n        })\r\n\r\n        /* fetch(\"http://localhost:4000/items\", {\r\n            method: 'get'\r\n\r\n        }) */\r\n        .then((res) => {\r\n\r\n            \r\n            res.data.forEach(item => {\r\n\r\n                this.state.items.push({\r\n                    sku: item.sku,\r\n                    name: item.name\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    isNotExpired(date) {\r\n        const today = this.makeDate();\r\n        if (date === \"\") {\r\n            \r\n            return true;\r\n        }\r\n        if (date < today) {\r\n\r\n            \r\n            return false;\r\n\r\n        } else if (date > today) {\r\n\r\n            \r\n            return true;\r\n\r\n        } else if (date === today) {\r\n\r\n            \r\n            return false;\r\n\r\n        } else {\r\n\r\n            console.log(\"expiration cannot be read\")\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    getMovements() {\r\n\r\n\r\n        Axios({\r\n            method: \"GET\",\r\n            url: \"http://localhost:4000/movements\",\r\n        })\r\n\r\n        /* fetch(\"http://localhost:4000/movements\", {\r\n            method: 'get'\r\n\r\n        }) */\r\n        .then((res) => {\r\n\r\n            this.setState({\r\n                movements: res.data\r\n            })\r\n        });\r\n\r\n    };\r\n\r\n    /* getMovementsBySKU(sku) {\r\n\r\n        Axios({\r\n            method: \"GET\",\r\n            url: `http://localhost:4000/movements/${sku}`,\r\n        }).then((res) => {\r\n\r\n            return res.data;\r\n\r\n\r\n        });\r\n    }; */\r\n\r\n    appendData(item) {\r\n        this.displayData.push(this.buildItem(item));\r\n        this.setState({\r\n            showdata: this.displayData\r\n        });\r\n\r\n    }\r\n    appendLot(movement) {\r\n        this.displayData.push(this.buildLot(movement));\r\n        this.setState({\r\n            showdata: this.displayData\r\n        });\r\n    }\r\n    appendTotal(total) {\r\n        this.displayData.push(this.buildTotal(total));\r\n        this.setState({\r\n            showdata: this.displayData\r\n        });\r\n    }\r\n\r\n    makeDate() {\r\n\r\n        var todayDate = new Date();\r\n        var year = todayDate.getFullYear();\r\n        var month = todayDate.getMonth() + 1;\r\n        var day = todayDate.getDate();\r\n\r\n\r\n        if (day < 10) {\r\n            day = \"0\" + day.toString();\r\n        }\r\n        if (month < 10) {\r\n            month = \"0\" + (month.toString());\r\n        }\r\n        var fullDate = year + \"/\" + month + \"/\" + day;\r\n        return fullDate;\r\n\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"mainContainer\">\r\n                {/* <div >\r\n                    <button onClick={() => this.buildWholeCard()}>View Summary</button>\r\n\r\n                </div> */}\r\n                <div id=\"display-data-Container\">\r\n                    {this.displayData}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ItemSummary;","\r\nimport React from 'react';\r\nimport auth from '../auth';\r\nimport ItemSummary from './itemsummary';\r\n\r\nfunction Home(props) {\r\n\r\n  \r\n\r\n    return (\r\n        <div>\r\n            \r\n\r\n            <button onClick={()=>{\r\n                auth.logout(()=>{\r\n                    props.history.push('/');\r\n                });\r\n            }}>Log Out</button>\r\n            \r\n            <ItemSummary/>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport auth from './auth';\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={\r\n            (props) => {\r\n\r\n                if (auth.isAuthenticated()) {\r\n                    return <Component {...props} />;\r\n                }\r\n                else {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: '/',\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    } />\r\n                }\r\n\r\n            }\r\n        }\r\n        />\r\n    );\r\n};","import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\r\nimport Login from './pages/login';\r\nimport Home from './pages/home';\r\nimport { ProtectedRoute } from './protected.route';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path='/' component={Login} />\r\n        <ProtectedRoute exact path='/home' component={Home} />\r\n        <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\r\n      </Switch>\r\n\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}